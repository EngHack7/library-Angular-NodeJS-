import { ElementRef, ViewContainerRef, Renderer2, Injector } from '@angular/core';
import { IComponentBase } from '@syncfusion/ej2-angular-base';
import { ComboBox } from '@syncfusion/ej2-dropdowns';
import * as ɵngcc0 from '@angular/core';
export declare const inputs: string[];
export declare const outputs: string[];
export declare const twoWays: string[];
/**
*The ComboBox component allows the user to type a value or choose an option from the list of predefined options.
*```html
*<ejs-combobox></ejs-combobox>
*```
*/
export declare class ComboBoxComponent extends ComboBox implements IComponentBase {
    private ngEle;
    private srenderer;
    private viewContainerRef;
    private injector;
    formCompContext: any;
    formContext: any;
    tagObjects: any;
    valueChange: any;
    /**
     * Accepts the template design and assigns it to the footer container of the popup list.
     * > For more details about the available template options refer to [`Template`](../../drop-down-list/templates) documentation.
     * @default null

     */
    footerTemplate: any;
    /**
     * Accepts the template design and assigns it to the header container of the popup list.
     * > For more details about the available template options refer to [`Template`](../../drop-down-list/templates) documentation.
     * @default null

     */
    headerTemplate: any;
    /**
     * Accepts the template design and assigns it to the group headers present in the popup list.
     * @default null

     */
    groupTemplate: any;
    /**
     * Accepts the template design and assigns it to each list item present in the popup.
     * We have built-in `template engine`
     *
     * which provides options to compile template string into a executable function.
     *For EX: We have expression evolution as like ES6 expression string literals.
     * @default null

     */
    itemTemplate: any;
    noRecordsTemplate: any;
    actionFailureTemplate: any;
    private skipFromEvent;
    constructor(ngEle: ElementRef, srenderer: Renderer2, viewContainerRef: ViewContainerRef, injector: Injector);
    registerOnChange(registerFunction: (_: any) => void): void;
    registerOnTouched(registerFunction: () => void): void;
    writeValue(value: any): void;
    setDisabledState(disabled: boolean): void;
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    ngAfterContentChecked(): void;
    registerEvents: (eventList: string[]) => void;
    addTwoWay: (propList: string[]) => void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ComboBoxComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ComboBoxComponent, "ejs-combobox", never, { "actionFailureTemplate": "actionFailureTemplate"; "allowCustom": "allowCustom"; "allowFiltering": "allowFiltering"; "autofill": "autofill"; "cssClass": "cssClass"; "dataSource": "dataSource"; "enablePersistence": "enablePersistence"; "enableRtl": "enableRtl"; "enabled": "enabled"; "fields": "fields"; "filterBarPlaceholder": "filterBarPlaceholder"; "filterType": "filterType"; "floatLabelType": "floatLabelType"; "footerTemplate": "footerTemplate"; "groupTemplate": "groupTemplate"; "headerTemplate": "headerTemplate"; "htmlAttributes": "htmlAttributes"; "ignoreAccent": "ignoreAccent"; "ignoreCase": "ignoreCase"; "index": "index"; "itemTemplate": "itemTemplate"; "locale": "locale"; "noRecordsTemplate": "noRecordsTemplate"; "placeholder": "placeholder"; "popupHeight": "popupHeight"; "popupWidth": "popupWidth"; "query": "query"; "readonly": "readonly"; "showClearButton": "showClearButton"; "sortOrder": "sortOrder"; "text": "text"; "value": "value"; "valueTemplate": "valueTemplate"; "width": "width"; "zIndex": "zIndex"; }, { "actionBegin": "actionBegin"; "actionComplete": "actionComplete"; "actionFailure": "actionFailure"; "beforeOpen": "beforeOpen"; "blur": "blur"; "change": "change"; "close": "close"; "created": "created"; "customValueSpecifier": "customValueSpecifier"; "dataBound": "dataBound"; "destroyed": "destroyed"; "filtering": "filtering"; "focus": "focus"; "open": "open"; "select": "select"; "valueChange": "valueChange"; }, ["footerTemplate", "headerTemplate", "groupTemplate", "itemTemplate", "noRecordsTemplate", "actionFailureTemplate"], never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tYm9ib3guY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbImNvbWJvYm94LmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVsZW1lbnRSZWYsIFZpZXdDb250YWluZXJSZWYsIFJlbmRlcmVyMiwgSW5qZWN0b3IgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IElDb21wb25lbnRCYXNlIH0gZnJvbSAnQHN5bmNmdXNpb24vZWoyLWFuZ3VsYXItYmFzZSc7XG5pbXBvcnQgeyBDb21ib0JveCB9IGZyb20gJ0BzeW5jZnVzaW9uL2VqMi1kcm9wZG93bnMnO1xuZXhwb3J0IGRlY2xhcmUgY29uc3QgaW5wdXRzOiBzdHJpbmdbXTtcbmV4cG9ydCBkZWNsYXJlIGNvbnN0IG91dHB1dHM6IHN0cmluZ1tdO1xuZXhwb3J0IGRlY2xhcmUgY29uc3QgdHdvV2F5czogc3RyaW5nW107XG4vKipcbipUaGUgQ29tYm9Cb3ggY29tcG9uZW50IGFsbG93cyB0aGUgdXNlciB0byB0eXBlIGEgdmFsdWUgb3IgY2hvb3NlIGFuIG9wdGlvbiBmcm9tIHRoZSBsaXN0IG9mIHByZWRlZmluZWQgb3B0aW9ucy5cbipgYGBodG1sXG4qPGVqcy1jb21ib2JveD48L2Vqcy1jb21ib2JveD5cbipgYGBcbiovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBDb21ib0JveENvbXBvbmVudCBleHRlbmRzIENvbWJvQm94IGltcGxlbWVudHMgSUNvbXBvbmVudEJhc2Uge1xuICAgIHByaXZhdGUgbmdFbGU7XG4gICAgcHJpdmF0ZSBzcmVuZGVyZXI7XG4gICAgcHJpdmF0ZSB2aWV3Q29udGFpbmVyUmVmO1xuICAgIHByaXZhdGUgaW5qZWN0b3I7XG4gICAgZm9ybUNvbXBDb250ZXh0OiBhbnk7XG4gICAgZm9ybUNvbnRleHQ6IGFueTtcbiAgICB0YWdPYmplY3RzOiBhbnk7XG4gICAgdmFsdWVDaGFuZ2U6IGFueTtcbiAgICAvKipcbiAgICAgKiBBY2NlcHRzIHRoZSB0ZW1wbGF0ZSBkZXNpZ24gYW5kIGFzc2lnbnMgaXQgdG8gdGhlIGZvb3RlciBjb250YWluZXIgb2YgdGhlIHBvcHVwIGxpc3QuXG4gICAgICogPiBGb3IgbW9yZSBkZXRhaWxzIGFib3V0IHRoZSBhdmFpbGFibGUgdGVtcGxhdGUgb3B0aW9ucyByZWZlciB0byBbYFRlbXBsYXRlYF0oLi4vLi4vZHJvcC1kb3duLWxpc3QvdGVtcGxhdGVzKSBkb2N1bWVudGF0aW9uLlxuICAgICAqIEBkZWZhdWx0IG51bGxcblxuICAgICAqL1xuICAgIGZvb3RlclRlbXBsYXRlOiBhbnk7XG4gICAgLyoqXG4gICAgICogQWNjZXB0cyB0aGUgdGVtcGxhdGUgZGVzaWduIGFuZCBhc3NpZ25zIGl0IHRvIHRoZSBoZWFkZXIgY29udGFpbmVyIG9mIHRoZSBwb3B1cCBsaXN0LlxuICAgICAqID4gRm9yIG1vcmUgZGV0YWlscyBhYm91dCB0aGUgYXZhaWxhYmxlIHRlbXBsYXRlIG9wdGlvbnMgcmVmZXIgdG8gW2BUZW1wbGF0ZWBdKC4uLy4uL2Ryb3AtZG93bi1saXN0L3RlbXBsYXRlcykgZG9jdW1lbnRhdGlvbi5cbiAgICAgKiBAZGVmYXVsdCBudWxsXG5cbiAgICAgKi9cbiAgICBoZWFkZXJUZW1wbGF0ZTogYW55O1xuICAgIC8qKlxuICAgICAqIEFjY2VwdHMgdGhlIHRlbXBsYXRlIGRlc2lnbiBhbmQgYXNzaWducyBpdCB0byB0aGUgZ3JvdXAgaGVhZGVycyBwcmVzZW50IGluIHRoZSBwb3B1cCBsaXN0LlxuICAgICAqIEBkZWZhdWx0IG51bGxcblxuICAgICAqL1xuICAgIGdyb3VwVGVtcGxhdGU6IGFueTtcbiAgICAvKipcbiAgICAgKiBBY2NlcHRzIHRoZSB0ZW1wbGF0ZSBkZXNpZ24gYW5kIGFzc2lnbnMgaXQgdG8gZWFjaCBsaXN0IGl0ZW0gcHJlc2VudCBpbiB0aGUgcG9wdXAuXG4gICAgICogV2UgaGF2ZSBidWlsdC1pbiBgdGVtcGxhdGUgZW5naW5lYFxuICAgICAqXG4gICAgICogd2hpY2ggcHJvdmlkZXMgb3B0aW9ucyB0byBjb21waWxlIHRlbXBsYXRlIHN0cmluZyBpbnRvIGEgZXhlY3V0YWJsZSBmdW5jdGlvbi5cbiAgICAgKkZvciBFWDogV2UgaGF2ZSBleHByZXNzaW9uIGV2b2x1dGlvbiBhcyBsaWtlIEVTNiBleHByZXNzaW9uIHN0cmluZyBsaXRlcmFscy5cbiAgICAgKiBAZGVmYXVsdCBudWxsXG5cbiAgICAgKi9cbiAgICBpdGVtVGVtcGxhdGU6IGFueTtcbiAgICBub1JlY29yZHNUZW1wbGF0ZTogYW55O1xuICAgIGFjdGlvbkZhaWx1cmVUZW1wbGF0ZTogYW55O1xuICAgIHByaXZhdGUgc2tpcEZyb21FdmVudDtcbiAgICBjb25zdHJ1Y3RvcihuZ0VsZTogRWxlbWVudFJlZiwgc3JlbmRlcmVyOiBSZW5kZXJlcjIsIHZpZXdDb250YWluZXJSZWY6IFZpZXdDb250YWluZXJSZWYsIGluamVjdG9yOiBJbmplY3Rvcik7XG4gICAgcmVnaXN0ZXJPbkNoYW5nZShyZWdpc3RlckZ1bmN0aW9uOiAoXzogYW55KSA9PiB2b2lkKTogdm9pZDtcbiAgICByZWdpc3Rlck9uVG91Y2hlZChyZWdpc3RlckZ1bmN0aW9uOiAoKSA9PiB2b2lkKTogdm9pZDtcbiAgICB3cml0ZVZhbHVlKHZhbHVlOiBhbnkpOiB2b2lkO1xuICAgIHNldERpc2FibGVkU3RhdGUoZGlzYWJsZWQ6IGJvb2xlYW4pOiB2b2lkO1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG4gICAgbmdBZnRlclZpZXdJbml0KCk6IHZvaWQ7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbiAgICBuZ0FmdGVyQ29udGVudENoZWNrZWQoKTogdm9pZDtcbiAgICByZWdpc3RlckV2ZW50czogKGV2ZW50TGlzdDogc3RyaW5nW10pID0+IHZvaWQ7XG4gICAgYWRkVHdvV2F5OiAocHJvcExpc3Q6IHN0cmluZ1tdKSA9PiB2b2lkO1xufVxuIl19